- name: Create local ~/.bin folder
  file: 
    path: "{{ item.path }}"
    state: directory
    mode: 0755
  loop: 
    - { path: "~/.bin" }

- name: Installing [dev] Homebrew Packages
  homebrew:
    name: "{{ item.name | default(item) }}"
    state: present
  loop: 
    - awscli
    - direnv
    - docker
    - docker-compose
    - git
    - htop
    - jenv
    - jq
    - yq
    - make
    - git-delta
    - kubernetes-cli
    - helm
    - k9s
    - jsonnet
    - aws-sam-cli
    - circleci
    - tfenv
    - python3

- name: Installing [dev] Homebrew Cask Packages
  homebrew_cask:
    name: "{{ item.name | default(item) }}"
    state: present
    options: "{{ item.install_options | default(omit) }}"
    accept_external_apps: yes
  ignore_errors: true
  loop: 
    - visual-studio-code
    - docker
  notify:
    - brew doctor

- name: Install SDKMAN
  block:
  - name: "sdkman: verify if SDKMAN Is Installed"
    stat:
      path: "~/.sdkman/"
    register: "sdkman_installed"

  - name: "sdkman: install"
    shell: curl -sSL https://get.sdkman.io | bash -s
    when: not sdkman_installed.stat.exists

  - name: "sdkman: add to .zshrc"
    lineinfile:
      dest: ~/.zshrc
      regexp: 'sdkman-init.sh'
      line: '[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"'
      state: present
  - name: "sdkman: link dotfiles"
    file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
      force: yes
    loop:
      - { src: "~/dotfiles/sdkman", dest: "~/.sdkman/etc/config"}      

- name: Setup git and delta
  git_config:
    name: "{{ item.name }}"
    scope: global
    value: "{{ item.value }}"
  loop:
    - { name: "pager.branch", value: "false" }
    - { name: "core.pager", value: "delta" }
    - { name: "interactive.diffFilter", value: "delta --color-only" }
    - { name: "delta.features", value: "side-by-side line-numbers decorations" }
    - { name: "delta.whitespace-error-style", value: "22 reverse" }
    - { name: "delta.decorations.commit-decoration-style", value: "bold yellow box ul" }
    - { name: "delta.decorations.file-style", value: "bold yellow ul" }
    - { name: "delta.decorations.file-decoration-style", value: "none" }
